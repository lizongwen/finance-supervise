/*
	HTML5 Reset :: style.css
	----------------------------------------------------------
	We have learned much from/been inspired by/taken code where offered from:

	Eric Meyer					:: http://meyerweb.com
	HTML5 Doctor				:: http://html5doctor.com
	and the HTML5 Boilerplate	:: http://html5boilerplate.com

-------------------------------------------------------------------------------*/


/* Let's default this puppy out
-------------------------------------------------------------------------------*/

html, body, body div, span, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, abbr, address, cite, code, del, dfn, em, img, ins, kbd, q, samp, small, strong, sub, sup, var, b, i, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, figure, footer, header, menu, nav, section, time, mark, audio, video, details, summary {
	margin: 0;
	padding: 0;
	border: 0;
	font-size: 100%;
	vertical-align: baseline;
	background: transparent;
}
main, article, aside, figure, footer, header, nav, section, details, summary {
	display: block;
}

/* Handle box-sizing while better addressing child elements:
   http://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/ */

html {
	box-sizing: border-box;
	font-size: 10px;
	-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
	overflow-y: auto;
}
body {
	font-family: "Helvetica Neue", "Luxi Sans", "DejaVu Sans", Tahoma, "Hiragino Sans GB", STHeiti, "Microsoft YaHei";
	font-size: 14px;
	line-height: 1.42857143;
	color: #333;
	background-color: #fff;
}
*, *:before, *:after {
	-webkit-box-sizing: inherit;
	-moz-box-sizing: inherit;
	box-sizing: inherit;
}

/* consider resetting the default cursor: https://gist.github.com/murtaugh/5247154 */


/* Responsive images and other embedded objects */


/* if you don't have full control over `img` tags (if you have to overcome attributes), consider adding height: auto */

img, object, embed {
	max-width: 100%;
}

/*
   Note: keeping IMG here will cause problems if you're using foreground images as sprites.
	In fact, it *will* cause problems with Google Maps' controls at small size.
	If this is the case for you, try uncommenting the following:

#map img {
		max-width: none;
}
*/


/* force a vertical scrollbar to prevent a jumpy page */


/* we use a lot of ULs that aren't bulleted.
	you'll have to restore the bullets within content,
	which is fine because they're probably customized anyway */

ul {
	list-style: none;
}
blockquote, q {
	quotes: none;
}
blockquote:before, blockquote:after, q:before, q:after {
	content: '';
	content: none;
}
a {
	margin: 0;
	padding: 0;
	font-size: 100%;
	vertical-align: baseline;
	text-decoration: none;
	color: #337ab7;
	background: transparent;
}
iframe {
	display: block;
}
a:hover, a:focus {
	color: #23527c;
	text-decoration: none;
}
a:focus {
	outline: 5px auto -webkit-focus-ring-color;
	outline-offset: -2px;
}
del {
	text-decoration: line-through;
}
abbr[title], dfn[title] {
	border-bottom: 1px dotted #000;
	cursor: help;
}
i {
	font-style: normal;
}

/* tables still need cellspacing="0" in the markup */

table {
	border-collapse: separate;
	border-spacing: 0;
}
th {
	font-weight: bold;
	vertical-align: middle;
}
td {
	font-weight: normal;
	vertical-align: middle;
}
hr {
	display: block;
	height: 1px;
	border: 0;
	border-top: 1px solid #ccc;
	margin: 1em 0;
	padding: 0;
}
input, select {
	vertical-align: middle;
}
input, button, select, textarea {
	font-family: inherit;
	font-size: inherit;
	line-height: inherit;
}
pre {
	white-space: pre;
	/* CSS2 */
	white-space: pre-wrap;
	/* CSS 2.1 */
	white-space: pre-line;
	/* CSS 3 (and 2.1 as well, actually) */
	word-wrap: break-word;
	/* IE */
}
input[type="radio"] {
	vertical-align: text-bottom;
}
input[type="checkbox"] {
	vertical-align: bottom;
}
.ie7 input[type="checkbox"] {
	vertical-align: baseline;
}
.ie6 input {
	vertical-align: text-bottom;
}
select, input, textarea {
	font: 99% sans-serif;
}
table {
	table-layout: fixed;
	font-size: inherit;
	font: 100%;
}
small {
	font-size: 85%;
}
strong {
	font-weight: bold;
}
img {
	vertical-align: middle;
}
td, td img {
	vertical-align: top;
}

/* Make sure sup and sub don't mess with your line-heights http://gist.github.com/413930 */

sub, sup {
	font-size: 75%;
	line-height: 0;
	position: relative;
}
sup {
	top: -0.5em;
}
sub {
	bottom: -0.25em;
}

/* standardize any monospaced elements */

pre, code, kbd, samp {
	font-family: monospace, sans-serif;
}

/* hand cursor on clickable elements */

.clickable, label, input[type=button], input[type=submit], input[type=file], button {
	cursor: pointer;
}

/* Webkit browsers add a 2px margin outside the chrome of form elements */

button, input, select, textarea {
	margin: 0;
}
textarea {
	padding: 5px;
	resize: none;
	border: 1px solid;
}

/* make buttons play nice in IE */

button, input[type=button] {
	width: auto;
	overflow: visible;
}

/* scale images in IE7 more attractively */

.ie7 img {
	-ms-interpolation-mode: bicubic;
}

/* prevent BG image flicker upon hover
   (commented out as usage is rare, and the filter syntax messes with some pre-processors)
.ie6 html {filter: expression(document.execCommand("BackgroundImageCache", false, true));}
*/


/* let's clear some floats */

.clearfix:before, .clearfix:after {
	content: "";
	display: table;
}
.clearfix:after {
	clear: both;
}
.clearfix {
	*zoom: 1;
	/* IE6-7 触发 hasLayout */
}
.center-block {
	display: block;
	margin-right: auto;
	margin-left: auto;
}
.pull-left, .fl {
	float: left !important;
}
.pull-right, .fr {
	float: right !important;
}
.inline-block {
	display: inline-block;
}
.hide {
	display: none !important;
}
.show {
	display: block !important;
}
.align-center {
	text-align: center!important;
}
.align-left {
	text-align: left!important;
}
.align-right {
	text-align: right!important;
}
.text-center{
	text-align: center!important;
}
.invisible {
	visibility: hidden;
}
.text-hide {
	font: 0/0 a;
	color: transparent;
	text-shadow: none;
	background-color: transparent;
	border: 0;
}
.hidden {
	display: none !important;
}
.affix {
	position: fixed;
}
.over-hidden {
	overflow: hidden;
}

/*
 * Gridism
 * A simple, responsive, and handy CSS grid by @cobyism
 * https://github.com/cobyism/gridism
 */


/* Preserve some sanity */

.grid, .unit {
	-webkit-box-sizing: border-box;
	-moz-box-sizing: border-box;
	box-sizing: border-box;
}

/* Set up some rules to govern the grid */

.grid {
	display: block;
	clear: both;
}
.grid .unit {
	float: left;
	width: 100%;
	padding: 10px;
}

/* This ensures the outer gutters are equal to the (doubled) inner gutters. */

.grid .unit:first-child {
	padding-left: 20px;
}
.grid .unit:last-child {
	padding-right: 20px;
}

/* Nested grids already have padding though, so let's nuke it */

.unit .unit:first-child {
	padding-left: 0;
}
.unit .unit:last-child {
	padding-right: 0;
}
.unit .grid:first-child>.unit {
	padding-top: 0;
}
.unit .grid:last-child>.unit {
	padding-bottom: 0;
}

/* Let people nuke the gutters/padding completely in a couple of ways */

.no-gutters .unit, .unit.no-gutters {
	padding: 0 !important;
}

/* Wrapping at a maximum width is optional */

.wrap .grid, .grid.wrap {
	max-width: 978px;
	margin: 0 auto;
}

/* Width classes also have shorthand versions numbered as fractions
 * For example: for a grid unit 1/3 (one third) of the parent width,
 * simply apply class="w-1-3" to the element. */

.grid .whole, .grid .w-1-1 {
	width: 100%;
}
.grid .half, .grid .w-1-2 {
	width: 50%;
}
.grid .one-third, .grid .w-1-3 {
	width: 33.3332%;
}
.grid .two-thirds, .grid .w-2-3 {
	width: 66.6665%;
}
.grid .one-quarter, .grid .one-fourth, .grid .w-1-4 {
	width: 25%;
}
.grid .three-quarters, .grid .three-fourths, .grid .w-3-4 {
	width: 75%;
}
.grid .one-fifth, .grid .w-1-5 {
	width: 20%;
}
.grid .two-fifths, .grid .w-2-5 {
	width: 40%;
}
.grid .three-fifths, .grid .w-3-5 {
	width: 60%;
}
.grid .four-fifths, .grid .w-4-5 {
	width: 80%;
}
.grid .golden-small, .grid .w-g-s {
	width: 38.2716%;
}

/* Golden section: smaller piece */

.grid .golden-large, .grid .w-g-l {
	width: 61.7283%;
}

/* Golden section: larger piece */


/* Clearfix after every .grid */

.grid {
	*zoom: 1;
}
.grid:before, .grid:after {
	display: table;
	content: "";
	line-height: 0;
}
.grid:after {
	clear: both;
}

/* A property for a better rendering of images in units: in
   this way bigger pictures are just resized if the unit
   becomes smaller */

.unit img {
	max-width: 100%;
}

/* Hide elements using this class by default */

.only-on-mobiles {
	display: none !important;
}

/* Responsive Stuff */

@media screen and (max-width: 568px) {
	/* Stack anything that isn't full-width on smaller screens 
     and doesn't provide the no-stacking-on-mobiles class */
	.grid:not(.no-stacking-on-mobiles)>.unit {
		width: 100% !important;
		padding-left: 20px;
		padding-right: 20px;
	}
	.unit .grid .unit {
		padding-left: 0px;
		padding-right: 0px;
	}
	/* Sometimes, you just want to be different on small screens */
	.center-on-mobiles {
		text-align: center !important;
	}
	.hide-on-mobiles {
		display: none !important;
	}
	.only-on-mobiles {
		display: block !important;
	}
}

/* Expand the wrap a bit further on larger screens */

@media screen and (min-width: 1180px) {
	.wider .grid, .grid.wider {
		max-width: 1180px;
		margin: 0 auto;
	}
}

/*icon css*/


/*atom css*/


/*layout css*/


/*skins css*/


/*component css*/